{% extends "layout.jinja" %}
{% set active_page = 'gallery' %}
{% block title %}{{ _('gallery.meta_title') }}{% endblock %}
{% block head %}
{{ super() }}
  <link rel="stylesheet"
        href="{{ url_for('static', filename='vendor/vue-multiselect/vue-multiselect.min.css') }}"/>
  <link rel="stylesheet" href="{{ url_for('static', filename='css/gallery.css') }}">

<script src="{{ url_for('static', filename='vendor/vue-lazyload.js') }}"></script>
  <script src="{{ url_for('static', filename='vendor/vue-multiselect/vue-multiselect.min.js') }}"></script>
  <script src="{{ url_for('static', filename='js/gallery.js') }}"></script>
{% endblock %}


{% block bodyClassNames %}page-gallery{% endblock %}

{% block header_title %}{% endblock %}

{% block content %}

  {# <div class="container">
    <div class="row justify-content-center">
    {% for site in sites %}
      <div class="picture col-lg-2 col-md-3 col-sm-4 col-6">
        <a href="/sites/{{ site.id_site }}">
          <img src="{{ site.photo }}" alt="{{ site.name_site }}">
        </a>
        <div class="discover">
          <a href="/sites/{{ site.id_site }}" class="d-block">{{ site.name_site }}<br /><span class="text-uppercase township">{{ site.ville.nom_commune }}</span><small class="ref">{{ site.ref_site }}</small></a>
        </div>
      </div>
    {% endfor %}
    </div>
  </div> #}

  <div id="js-app-gallery"
        class="app-gallery container-fluid d-flex flex-column"
        v-bind:class="{'sidebar-collapsed': isSidebarCollapsed}">
    <div class="row pt-4 pb-2 d-none d-md-flex header-filters sans-serif">
      <div v-for="(filter) in filters" v-bind:key="filter.name" class="col-2">
          <small class="floating-filter-label d-block ml-2 px-1"
                v-bind:class="{ active: filter.selectedItems.length }"
                v-html="filter.label"></small>
          <v-multiselect
          :multiple="true"
          :limit="1"
          :limit-text="filterLimitText"
          v-model="filter.selectedItems"
          :options="filter.items"
          track-by="label"
          :custom-label="getMultiselectLabel"
          placeholder=""
          :show-labels="false"
          @input="onMultiselectInput(filter, $event)"
          >
          <template><span slot="noResult">Pas de résultats</span></template>
          </v-multiselect>
      </div>
      <div class="col-2">
        <button type="button"
                @click="onCancelClick()"
                class="btn btn-outline-secondary">Réinitialiser</button>
      </div>
    </div>
    <div class="container sans-serif">
      <div class="photos row justify-content-center">
        <div v-for="site in selectedSites"
          class="picture col-lg-2 col-md-3 col-sm-4 col-6"
          @mouseenter="onSiteMousover(site)"
          @mouseleave="onSiteMouseout(site)"
        >
          <a :href="'/sites/' + site.id_site">
            <img v-lazy="'{{ img_srv }}/crop?file=' + site.photo + '&width=200&height=200'" :alt="site.name_site">
          </a>
          <div class="discover" :style="{
            'background-color': site.observatory.color + 'BB'
            }"
          >
            <a :href="'/sites/' + site.id_site" class="d-block">
              <span v-if="isMultiObservatories" class="observatory-label" v-html="site.observatory.title"></span>
              <span v-if="!isMultiObservatories" class="site-label" v-html="site.name_site"></span>
              <span class="township" v-html="site.ville.label"></span>
              <span v-if="isMultiObservatories" class="label" v-html="site.name_site"></span>
              <small class="ref" v-html="site.ref_site"></small>
            </a>
          </div>
        </div>



      </div>
      <div class="row">
        <div class="col d-flex justify-content-center">
          <span class="center-filter px-3 py-2">
          {% autoescape false %} {{ _('sites.filters.nb_result', nb='<span v-html="selectedSites.length"></span
          >') }} {% endautoescape %}
        </div>
      </div>

    </div>
  </div>

  <script>
    document.onreadystatechange = () => {
      if (document.readyState == 'complete') {

        geopsg.initGallery({
          observatories: {{observatories | tojson}},
          sites: {{sites | tojson}},
          filters: {{filters | tojson}},
          dbconf: {{dbconf | tojson}}
        })
      }
    };

  </script>

<!-- <script>
    document.onreadystatechange = () => {
      if (document.readyState == 'complete') {
  
        var picture = document.querySelector('.picture');
        var container = document.querySelector('.container');
        var width = container.clientWidth;
        window.addEventListener('resize', () => {
          onResize()

        })
        onResize()
        function onResize() {
          var calc = "calc(" + width + " / 6)";
          picture.style.width = calc + 'px';
          picture.style.height = picture.style.width;
          console.log('width', picture.style.width)
  
        }
      }
    };
  </script> -->

{% endblock %}