version: "3"
services:
  proxy:
    depends_on:
      - backend
      - admin
      - thumbor
    image: traefik:v2.2
    ports:
      - "${PROXY_HTTP_PORT}:80"
      - "${PROXY_API_PORT}:8080"
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --accesslog
      - --log
      - --api
      - --api.insecure=true
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true

  thumbor:
    image: apsl/thumbor:latest
    environment:
      - LOADER=thumbor.loaders.http_loader
      - ALLOWED_SOURCES=['backend']
      - RESULT_STORAGE=thumbor.result_storages.file_storage
      - ALLOW_UNSAFE_URL=False
      - SECURITY_KEY=${THUMBOR_SECURITY_KEY}
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.thumbor.rule=PathPrefix(`/thumbor`)
      - traefik.http.routers.thumbor.middlewares=thumbor-stripprefix
      - traefik.http.middlewares.thumbor-stripprefix.stripprefix.prefixes=/thumbor
      - traefik.http.services.thumbor.loadbalancer.server.port=8000
  
  backend:
    depends_on:
      db:
        condition: service_healthy
    networks:
      - traefik
    image: ghcr.io/naturalsolutions/geopaysages_backend:latest
    volumes:
      - ${VOLUME_PATH}/upload:/app/static/upload
      - ${VOLUME_PATH}/static:/app/static/custom
      - ${VOLUME_PATH}/i18n:/app/i18n
      - ${VOLUME_PATH}/custom_app.py:/app/custom_app.py
      - ${VOLUME_PATH}/tpl:/app/tpl/custom
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=PathPrefix(`/`)
      - traefik.http.services.backend.loadbalancer.server.port=80
    env_file:
      - ./.env

  admin:
    depends_on:
      - backend
    networks:
      - traefik
    image: ghcr.io/naturalsolutions/geopaysages_admin:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.admin.rule=PathPrefix(`/admin`)
      - traefik.http.services.admin.loadbalancer.server.port=80

  db:
    image: ghcr.io/naturalsolutions/geopaysages_db:latest
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -h 127.0.0.1"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 60s
    networks:
      - traefik
    volumes:
      - geopaysages-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_SERVER=db
      - POSTGRES_USER=${DB_USER}

volumes:
  geopaysages-db-data:

networks:
  traefik:
    external: true
