version: '3'

# TODO: create global variables

services:
  thumbor:
    image: apsl/thumbor:latest
    environment:
      - LOADER=thumbor.loaders.file_loader
      - FILE_LOADER_ROOT_PATH=/data/loader
      - RESULT_STORAGE=thumbor.result_storages.file_storage
      - ALLOW_UNSAFE_URL=False
      - SECURITY_KEY=${THUMBOR_SECURITY_KEY}
    volumes:
      - ${VOLUME_PATH}/upload:/data/loader
    ports:
      - "8083:8000"

  backend:
    container_name: geopaysage_backend # TODO: maybe to remove
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.backend
    volumes:
      - ../backend:/app
      - ${VOLUME_PATH}/upload:/upload
    ports:
      - "${HTTP_PORT}:80"
    env_file:
      - ./.env
    environment:
      - FLASK_APP=app.py
      - FLASK_DEBUG=1
      - 'RUN=flask run --host=0.0.0.0 --port=80'
    #command: flask run --host=0.0.0.0 --port=80
    # Infinite loop, to keep it alive, for debugging
    command: bash -c "/app/prestart.sh && flask run --host=0.0.0.0 --port=80 && while true; do echo 'sleeping...' && sleep 10; done"
  
  db:
    container_name: geopaysage_db
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.db
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -h 127.0.0.1"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 60s
    volumes:
      - geopaysages-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_SERVER=db
      - POSTGRES_USER=${DB_USER}

volumes:
  geopaysages-db-data:

